plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.bmarket'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.5")
}

ext {
	queryDslVersion = "5.0.0"
}

dependencies {
	//h2
	implementation 'com.h2database:h2'
	//mariadb
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//Spring hateoas
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	//UUID
	implementation "com.fasterxml.uuid:java-uuid-generator:4.0.1"
	//web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//discovery client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	//bootstrap
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	compileOnly 'org.projectlombok:lombok'


	annotationProcessor 'org.projectlombok:lombok'
	//rest docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

//spring docs
ext {
	snippetDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs/')
}


bootJar {
	dependsOn asciidoctor
	copy {
		from file("build/docs/asciidoc")
		into file("src/main/resources/static/docs")
	}

}


tasks.named('test') {
	useJUnitPlatform()
}

